"use strict";

import type { Metadata } from "next";
import localFont from "next/font/local";
import { Noto_Sans, Plus_Jakarta_Sans } from "next/font/google";
import { getServerSession } from "next-auth/next";
import { authOptions } from "@/utils/nextAuth/authOptions";
import { Toaster } from "@/shadcn/components/ui/toaster";
import validateSession from '@/utils/authentication/validateSession';
import User from "@/utils/mongoLib/models/user";
import { AppRootProvider } from "@/shared/appContainers";
import "./globals.css";

const notoSans = Noto_Sans({
    subsets: ["latin"],
    display: "swap",
    weight: '400'
})

export const plusJakartaSans = Plus_Jakarta_Sans({
    subsets: ["latin"],
    display: "swap",
    weight: '400'
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

let isProduction = process.env.NODE_ENV === "production";
// let isProduction = true;

const RootLayout = async ({
  children
}: Readonly<{
  children: React.ReactNode;
}>) => {

    const session = await getServerSession(authOptions);

    return (
        <html lang="en">
            <body
                className={`${notoSans.className} ${plusJakartaSans.className} antialiased`}
            >
                <AppRootProvider session={session}>
                    {children}
                </AppRootProvider>
                <Toaster/>
            </body>
        </html>
    );
}

import Image from 'next/image';

const InConstruction = async () => {
    const session = await getServerSession(authOptions);

    const { user: { name, email, image, birthday } } = session;

    return (
        <html lang="en">
            <body
                className={`${notoSans.className} ${plusJakartaSans.className} antialiased`}
            >
                <div className="flex items-center justify-center flex-col h-screen bg-[#f4efe6]">
                    <Image
                        src="/work-inprogress.svg"
                        height={300}
                        width={300}
                    />
                    <div className="py-3 text-center">
                        <p className="text-2xl font-bold py-2">We are under Construction</p>
                        <p>We&apos;ll soon back with wonders</p>
                    </div>
                    <div className="flex gap-2 items-center text-center py-4 flex-col ">
                        <img
                            className="bg-center bg-no-repeat aspect-square bg-cover rounded-full size-12"
                            src={image || "/icons/default-user.svg"}
                            referrerPolicy="no-referrer"
                        />
                        <div className="flex flex-col">
                            <h1 className="text-[#000000] font-medium leading-normal">{name}</h1>
                            <h1 className="text-[#999999] text-[0.8rem] font-normal leading-normal">{email}</h1>
                        </div>
                    </div>
                    <div>
                        <span>Contact: </span>
                        <a className="text-[blue]" href={`mailto:${process.env.CC_EMAIL}`}>{process.env.CC_EMAIL}</a>
                    </div>
                </div>
            </body>
        </html>
    );
}

export default isProduction ? InConstruction : RootLayout;
